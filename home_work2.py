"""
   Условие:
   На вход подается число n.
   Задача:
   Написать скрипт в любой парадигме, который выводит на экран таблицу умножения всех чисел от 1 до n.
   Обоснуйте выбор парадигм.

   Для реализации поставленной задачи принял решение использовать процедурное программирование,
   так как:
     1. Процедурный поход позволяет использовать код повторно;
     2. При расширении функциональности скрипта код сохранит читаемость;
     3. Логика выполнения скрипта разделена по независящим друг от друга блокам;
     4. Происходит сокрытие функционала скрипта (инкапсуляция логики скрипта);
"""


# Получение числа от пользователя через консоль в промежутке от 1 до 10 включительно
def get_num():
    flag = True
    message = "Введено некорректное значение!"
    while flag:
        num = input('Введите число: ')
        try:
            num = int(num)
            if 0 < num < 11:
                flag = False
            else:
                print(message)
        except ValueError:
            print(message)
    return num

# Печать таблицы умножения
def print_multi_table(num: int):
    for i in range(1, num + 1):
        for j in range(1, 11):
            print(f'{i} x {j} = {i * j}')
        print()

print_multi_table(get_num())

